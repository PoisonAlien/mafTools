% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setMaf.R
\name{setMaf}
\alias{setMaf}
\alias{setdiffMAF}
\alias{unionMAF}
\alias{intersectMAF}
\title{Set Operations for MAF objects}
\usage{
setdiffMAF(x, y, mafObj = TRUE, ...)

unionMAF(x, y, mafObj = TRUE, ...)

intersectMAF(x, y, mafObj = TRUE, ...)
}
\arguments{
\item{x}{the first `MAF` object.}

\item{y}{the second `MAF` object.}

\item{mafObj}{returns output as `MAF` object. Default `TRUE`.}

\item{...}{other parameters passing to `subsetMaf` for subsetting operations.}
}
\description{
Set Operations for MAF objects
}
\examples{
laml.maf <- system.file("extdata", "tcga_laml.maf.gz", package = "maftools")
laml <- read.maf(maf = laml.maf)
## Generate two example MAF objects
x <- subsetMaf(maf = laml, tsb = c('TCGA-AB-2816'), genes = c("DNMT3A", "FLT3"))
x@data
y <- subsetMaf(maf = laml, tsb = c('TCGA-AB-2802'), genes = c("DNMT3A", "FLT3"))
y@data

setdiffMAF(x, y, mafObj = FALSE)
setdiffMAF(x, y)

intersectMAF(x, y, mafObj = FALSE)
intersectMAF(x, y)

# This is similar to merge_mafs()
unionMAF(x, y, mafObj = FALSE)
unionMAF(x, y)
}
